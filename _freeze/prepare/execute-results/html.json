{
  "hash": "6200bc2e2a865c64da22488c80f659d3",
  "result": {
    "markdown": "---\ntitle: \"Chuẩn bị\"\nexecute:\n  echo: true\nsubtitle: \"R for babies\"\nfooter: \"[Website](https://drthinhong.com/r4babies/prepare.html)\"\n---\n\n\n## Mục tiêu\n\n1.  Biết cách tìm path tới nơi lưu file data\n2.  Biết cách tạo và quản lý R project\n3.  Biết cách đọc data vào R\n\n## File data đang ở đâu?\n\nBước đầu tiên chúng ta phải biết file data đang nằm ở đâu trong máy tính. Vị trí, hay địa chỉ, hay đường dẫn lưu file data trong máy tính gọi là ***path***.\n\n## Windows\n\nĐể Windows hiển thị đường dẫn trong Explorer, trên thanh menu chọn dấu `...` \\> `Options`.\n\n![](img/prepare/path-win-option.png)\n\n## Windows\n\nChọn tab `View`, tick vào ô `Display the full path in the title bar`.\n\n![](img/prepare/path-win-full.png){width=\"60%\"}\n\n## Windows\n\nSau khi làm các bước trên, click vào title bar của Explorer sẽ thấy hiển thị đầy đủ path của file hoặc folder hiện tại như sau:\n\n![](img/prepare/path-win-1.png)\n\n![](img/prepare/path-win-2.png)\n\n## Windows\n\n![](img/prepare/path-win-2.png)\n\n::: callout-important\n# Lưu ý\n\nTrong Windows, khi copy path vào R cần sửa lại theo 1 trong 2 cách sau:\n\n1.  Sửa tất cả dấu `\\` thành `/`:\n\n```         \nC:/Users/ongph/github/r4babies/data\n```\n\n2.  Sửa tất cả dấu `\\` thành `\\\\`:\n\n```         \nC:\\\\Users\\\\ongph\\\\github\\\\r4babies\\\\data\n```\n:::\n\n## MacOS\n\nĐể hiển thị đường dẫn trong `Finder`, trên thanh menu chọn `View` \\> `Show Path Bar`\n\n![](img/prepare/path-mac-option.png){fig-alt=\"path-mac\" width=\"354\"}\n\n## MacOS\n\nTại thanh đường dẫn (Path Bar), nhấn chuột phải vào folder hoặc file, sau đó chọn `Copy \"tên_folder\" as Pathname` để copy đường dẫn đến folder.\n\nTrong ví dụ sau, đường dẫn được copy là `/Users/anhptq/Desktop/r4babies/data`\n\n![](img/prepare/path-mac-1.png){width=\"671\"}\n\n## Absolute path\n\nTrong ví dụ trên, `C:/Users/ongph/github/r4babies/data` là đường dẫn tuyệt đối (***absolute path***). Absolute path là path đầy đủ từ đầu ổ đĩa cho đến file hay folder hiện tại.\n\n## Relative path\n\nTrong folder `C:/Users/ongph/github/r4babies` có chứa 2 folders là `/data` và `/analysis`. Chúng ta có thể minh họa path này như sau:\n\n```         \nC:\n|-- Users\n    |-- ongph\n        |-- github\n            |-- r4adults\n                |-- data\n            |-- r4babies\n                |-- data\n                |-- analysis\n```\n\n## Relative path\n\n```         \nC:\n|-- Users\n    |-- ongph\n        |-- github\n            |-- r4adults\n                |-- data\n            |-- r4babies\n                |-- data\n                |-- analysis\n```\n\nVí dụ chúng ta đang ở trong folder `/data` nằm trong `/r4babies`. Từ `/data` muốn hướng dẫn cho máy tính đi đến được folder `/analysis` có thể viết ***relative path*** như sau:\n\n```         \n../analysis\n```\n\n## Relative path\n\n```         \nC:\n|-- Users\n    |-- ongph\n        |-- github\n            |-- r4adults\n                |-- data\n            |-- r4babies\n                |-- data\n                |-- analysis\n```\n\n```         \n../analysis\n```\n\nTrong đó:\n\n-   `..`: đi ngược lên 1 folder, trong ví dụ này chúng ta đang ở `/data`, đi ngược lên 1 folder là `/r4babies`\n-   `/analysis`: sau khi đi ngược lên `/r4babies`, hướng dẫn máy tính đi tiếp tới folder `/analysis`\n\n## Relative path\n\n```         \nC:\n|-- Users\n    |-- ongph\n        |-- github\n            |-- r4adults\n                |-- data\n            |-- r4babies\n                |-- data\n                |-- analysis\n```\n\nTương tự, chúng ta đang ở trong folder `/data` nằm trong `/r4babies`, muốn đến folder `/data` nằm trong `/r4adults` thì viết như sau:\n\n```         \n../../r4adults/data\n```\n\n## Quy tắc đặt tên files, folders\n\nĐể tránh bị lỗi trong quá trình sử dụng R, nên đặt tên files, folders theo các quy tắc sau:\n\n-   Không đặt tên có dấu tiếng Việt\n-   Không đặt tên quá dài\n-   Không đặt tên có các kí tự đặc biệt như `/`, `\\`, `&`, `,`, `(`, `)`..., tốt nhất chỉ nên đặt chữ và số\n\n## Quy tắc đặt tên files, folders\n\nĐể tránh bị lỗi trong quá trình sử dụng R, nên đặt tên files, folders theo các quy tắc sau:\n\n-   Không đặt tên chữ viết hoa viết thường lẫn lộn, nếu cần thì chỉ đặt theo quy luật camelCase (viết hoa chữ cái đầu của các từ sau từ đầu tiên, ví dụ `dataSoiHcm`) hoặc PascalCase (viết hoa chữ cái đầu của tất cả các từ, ví dụ `DataSoiHcm`)\n-   Không có khoảng trống `\" \"` trong tên, có thể đặt kiểu camelCase, hoặc sử dụng dấu `-`, `_` thay thế các khoảng trống: ví dụ không dùng tên `data soi HCM 2023.xlsx` mà có thể đặt là `dataSoiHcm2023.xlsx`, hoặc `data-soi-hcm-2023.xlsx`, hoặc `data_soi_hcm_2023.xlsx`\n\n## R project\n\nĐể tiện quản lý, mỗi dự án phân tích nên được đặt trong 1 folder. Trong folder này chứa tất cả data, code, bảng kết quả, biểu đồ... Chúng ta sẽ dùng chức năng tạo R project của RStudio để tạo folder này.\n\n## R project\n\nTrên thanh menu vào `File` \\> `New Project...` \\> `New Directory`.\n\n![](img/prepare/new-prj-1.png)\n\n## R project\n\nChọn Project Type là `New Project`.\n\n![](img/prepare/new-prj-2.png)\n\n## R project\n\nĐặt tên folder cho project này, và chọn đường dẫn nơi sẽ lưu project trong máy tính.\n\n![](img/prepare/new-prj-3.png)\n\n## R project\n\nTrong folder `/test` là một R project mới tạo này, chúng ta tạo thêm 2 folders `/data` và `/analysis`. Các thành phần trong folder này như sau:\n\n```         \ntest\n|-- data\n    |-- data.csv\n|-- analysis\n    |-- code.R\n    |-- analysis.Rmd\n|-- test.Rproj\n```\n\n-   Folder `/data`: chứa tất cả data.\n-   Folder `/analysis`: chứa tất cả file R Markdown.\n\n## R project\n\nTừ bây giờ, mỗi lần muốn phân tích cho dự án `/test` này, chúng ta mở file `test.Rproj` bằng RStudio. Tất cả các file code trong folder `/analysis` có thể đọc file trong folder `/data` bằng cách dùng relative path. Những data quan trọng không thể copy vào chung trong project thì dùng absolute path. Ví dụ:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.csv(\"../data/data.csv\")\n```\n:::\n\n\n## Phân biệt hai loại file chính\n\nChúng ta có thể gặp các files data ở rất nhiều format khác nhau, như `.csv`, `.txt`, `.json`, `.xlsx`, `.dta`... Tuy nhiên, một cách đơn giản, có thể chia các files thành 2 loại:\n\n- Text files\n- Binary files\n\n## Text files\n\nLà những files khi mở bằng text editor như Notepad thì có thể đọc được các chữ trong file (human-readable). Các files như `.csv`, `.txt`, `.json` đều là text files. Trong R đã có sẵn những functions để đọc được hầu hết các text files.\n\n## Text files\n\n::: {#fig-text-files layout-ncol=\"2\"}\n![](img/prepare/csv.png)\n\n![](img/prepare/json.png)\n\nFile `.csv` và `.json` khi mở bằng Notepad\n:::\n\n## Binary files\n\nLà những files khi mở bằng text editor như Notepad thì không đọc được các chữ trong file. Các files như `.xlsx`, `.dta` đều là binary files. Binary files cần được mở bằng các phần mềm chuyên dụng, ví dụ dùng Excel để mở file `.xlsx` thì mới đọc được dưới dạng chữ human-readable. Bản thân R không đọc được các loại file này, nhưng chúng ta có thể cài đặt và sử dụng các R packages để đọc binary files.\n\n## Binary files\n\n::: {#fig-binary-files layout-ncol=\"2\"}\n![](img/prepare/excel.png)\n\n![](img/prepare/dta.png)\n\nFile `.xlsx` và `.dta` khi mở bằng Notepad\n:::\n\n## `read.table()`\n\nLệnh `read.table()` là lệnh chung để đọc tất cả data dạng bảng.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread.table(file, header = FALSE, sep = \"\")\n```\n:::\n\n\nDùng `?read.table` để đọc thêm hướng dẫn sử dụng và các arguments khác của lệnh.\n\n## `read.table()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread.table(file, header = FALSE, sep = \"\")\n```\n:::\n\n\n-   `file`: path của file data đầu vào, có thể dùng absolute path hoặc relative path.\n\n-   `header`: dòng đầu tiên của file data có phải là tên cột không. Nếu `header = TRUE` thì R sẽ lấy các giá trị trong hàng đầu tiên làm tên cột. Nếu `header = FALSE` thì R sẽ tự đặt tên cột là `V1`, `V2`, `V3`...\n\n::: callout-important\n# Lưu ý\n\nTrong R, `TRUE` có thể viết tắt là `T` và `FALSE` có thể viết tắt là `F`.\n:::\n\n## `read.table()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread.table(file, header = FALSE, sep = \"\")\n```\n:::\n\n\n-   `sep`: các cột trong text file ngăn cách nhau bằng kí tự gì. Ví dụ file `life-exp.csv` nếu chúng ta mở bằng Notepad sẽ thấy các cột ngăn cách nhau bằng dấu `,`.\n\n![](img/prepare/csv.png)\n\n## `read.table()`\n\nChúng ta đọc file `life-exp.csv` vào R như sau:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.table(file = \"data/life-exp.csv\", header = F, sep = \",\")\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           V1   V2         V3               V4              V5            V6\n1     Country Year     Status Life expectancy  Adult Mortality infant deaths\n2 Afghanistan 2015 Developing             65.0             263            62\n3 Afghanistan 2014 Developing             59.9             271            64\n4 Afghanistan 2013 Developing             59.9             268            66\n5 Afghanistan 2012 Developing             59.5             272            69\n6 Afghanistan 2011 Developing             59.2             275            71\n       V7                     V8          V9      V10   V11                V12\n1 Alcohol percentage expenditure Hepatitis B Measles   BMI  under-five deaths \n2    0.01            71.27962362          65     1154  19.1                 83\n3    0.01            73.52358168          62      492  18.6                 86\n4    0.01            73.21924272          64      430  18.1                 89\n5    0.01             78.1842153          67     2787  17.6                 93\n6    0.01            7.097108703          68     3013  17.2                 97\n    V13               V14         V15       V16        V17         V18\n1 Polio Total expenditure Diphtheria   HIV/AIDS        GDP  Population\n2     6              8.16          65       0.1  584.25921 3.3736494e7\n3    58              8.18          62       0.1 612.696514    327582.0\n4    62              8.13          64       0.1 631.744976 3.1731688e7\n5    67              8.52          67       0.1    669.959  3.696958e6\n6    68              7.87          68       0.1  63.537231  2.978599e6\n                    V19                 V20                             V21\n1  thinness  1-19 years  thinness 5-9 years Income composition of resources\n2                  17.2                17.3                           0.479\n3                  17.5                17.5                           0.476\n4                  17.7                17.7                            0.47\n5                  17.9                18.0                           0.463\n6                  18.2                18.2                           0.454\n        V22\n1 Schooling\n2      10.1\n3      10.0\n4       9.9\n5       9.8\n6       9.5\n```\n:::\n:::\n\n\n## `read.table()`\n\nNếu đọc với argument `header = T`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.table(file = \"data/life-exp.csv\", header = T, sep = \",\")\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Country Year     Status Life.expectancy Adult.Mortality infant.deaths\n1 Afghanistan 2015 Developing            65.0             263            62\n2 Afghanistan 2014 Developing            59.9             271            64\n3 Afghanistan 2013 Developing            59.9             268            66\n4 Afghanistan 2012 Developing            59.5             272            69\n5 Afghanistan 2011 Developing            59.2             275            71\n6 Afghanistan 2010 Developing            58.8             279            74\n  Alcohol percentage.expenditure Hepatitis.B Measles  BMI under.five.deaths\n1    0.01              71.279624          65    1154 19.1                83\n2    0.01              73.523582          62     492 18.6                86\n3    0.01              73.219243          64     430 18.1                89\n4    0.01              78.184215          67    2787 17.6                93\n5    0.01               7.097109          68    3013 17.2                97\n6    0.01              79.679367          66    1989 16.7               102\n  Polio Total.expenditure Diphtheria HIV.AIDS       GDP Population\n1     6              8.16         65      0.1 584.25921   33736494\n2    58              8.18         62      0.1 612.69651     327582\n3    62              8.13         64      0.1 631.74498   31731688\n4    67              8.52         67      0.1 669.95900    3696958\n5    68              7.87         68      0.1  63.53723    2978599\n6    66              9.20         66      0.1 553.32894    2883167\n  thinness..1.19.years thinness.5.9.years Income.composition.of.resources\n1                 17.2               17.3                           0.479\n2                 17.5               17.5                           0.476\n3                 17.7               17.7                           0.470\n4                 17.9               18.0                           0.463\n5                 18.2               18.2                           0.454\n6                 18.4               18.4                           0.448\n  Schooling\n1      10.1\n2      10.0\n3       9.9\n4       9.8\n5       9.5\n6       9.2\n```\n:::\n:::\n\n\n## `read.table()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.table(file = \"data/life-exp.csv\", header = T, sep = \",\")\nhead(df)\n```\n:::\n\n\n::: callout-note\nDấu `<-` dùng để gán kết quả của một function cho một đối tượng (object) trong R. Nếu chỉ viết `read.table(file = \"data/life-exp.csv\", header = T, sep = \",\")` thì R không lưu lại kết quả sau khi đọc mà chỉ hiển thị ra màn hình.\n\nSau khi gán kết quả đọc của `read.table()` vào object `df`, dùng lệnh `head(df)` để hiển thị 6 dòng đầu tiên của bảng.\n:::\n\n## `read.csv()`\n\nFile `.csv` là một định dạng thông dụng, tên đầy đủ là comma-separated values nghĩa là các giá trị được ngăn cách bởi dấu `,` (comma). Trong R có sẵn lệnh `read.csv()` để đọc file `.csv`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread.csv(file, header = TRUE, sep = \",\")\n```\n:::\n\n\nCác arguments của `read.csv()` cũng tương tự `read.table()`, nhưng đã được quy định cho phù hợp với file `.csv`. Vì vậy, thường chỉ cần đặt path vào argument `file` là đủ.\n\n## `read.csv()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read.csv(file = \"data/life-exp.csv\")\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Country Year     Status Life.expectancy Adult.Mortality infant.deaths\n1 Afghanistan 2015 Developing            65.0             263            62\n2 Afghanistan 2014 Developing            59.9             271            64\n3 Afghanistan 2013 Developing            59.9             268            66\n4 Afghanistan 2012 Developing            59.5             272            69\n5 Afghanistan 2011 Developing            59.2             275            71\n6 Afghanistan 2010 Developing            58.8             279            74\n  Alcohol percentage.expenditure Hepatitis.B Measles  BMI under.five.deaths\n1    0.01              71.279624          65    1154 19.1                83\n2    0.01              73.523582          62     492 18.6                86\n3    0.01              73.219243          64     430 18.1                89\n4    0.01              78.184215          67    2787 17.6                93\n5    0.01               7.097109          68    3013 17.2                97\n6    0.01              79.679367          66    1989 16.7               102\n  Polio Total.expenditure Diphtheria HIV.AIDS       GDP Population\n1     6              8.16         65      0.1 584.25921   33736494\n2    58              8.18         62      0.1 612.69651     327582\n3    62              8.13         64      0.1 631.74498   31731688\n4    67              8.52         67      0.1 669.95900    3696958\n5    68              7.87         68      0.1  63.53723    2978599\n6    66              9.20         66      0.1 553.32894    2883167\n  thinness..1.19.years thinness.5.9.years Income.composition.of.resources\n1                 17.2               17.3                           0.479\n2                 17.5               17.5                           0.476\n3                 17.7               17.7                           0.470\n4                 17.9               18.0                           0.463\n5                 18.2               18.2                           0.454\n6                 18.4               18.4                           0.448\n  Schooling\n1      10.1\n2      10.0\n3       9.9\n4       9.8\n5       9.5\n6       9.2\n```\n:::\n:::\n\n\n## `read_excel()`\n\nDùng lệnh `read_excel()` trong package `readxl` để đọc các file excel (đuôi `.xls` hay `.xlsx`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_excel(path, sheet = NULL, col_names = TRUE)\n```\n:::\n\n\nChúng ta có thể thấy tên các arguments của `read_excel()` hoàn toàn khác với `read.table()` hay `read.csv()`.\n\n## `read_excel()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_excel(path, sheet = NULL, col_names = TRUE)\n```\n:::\n\n\n-   `path`: path của file data đầu vào.\n-   `sheet`: tên hoặc số thứ tự của sheet sẽ đọc vào R, nếu file có nhiều sheets.\n-   `col_names`: dòng đầu tiên của file data có phải là tên cột không, giống argument `header` của `read.table()`.\n\n## `read_excel()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\ndf <- read_excel(path = \"data/gdp-capita.xlsx\", sheet = 1)\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 10\n  `Country Name` `Country Code` `2015` `2016` `2017` `2018` `2019` `2020` `2021`\n  <chr>          <chr>           <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n1 Aruba          ABW            28419. 28450. 29329. 30918. 31903. 24008. 29128.\n2 Africa Easter… AFE             1554.  1444.  1625.  1558.  1508.  1356.  1546.\n3 Afghanistan    AFG              567.   523.   526.   492.   498.   512.   356.\n4 Africa Wester… AFW             1882.  1649.  1590.  1735.  1812.  1688.  1767.\n5 Angola         AGO             3217.  1810.  2439.  2541.  2191.  1451.  1927.\n6 Albania        ALB             3953.  4124.  4531.  5288.  5396.  5343.  6377.\n# ℹ 1 more variable: `2022` <dbl>\n```\n:::\n:::\n\n\n::: callout-important\n# Lưu ý\n\nMột lỗi thường gặp với file excel là R đọc các file có merged cells không tốt. Vì vậy khi nhập data, nên tránh làm merged cells.\n:::\n\n## File SPSS, Stata, SAS\n\nDùng các lệnh `read_sav()` (SPSS), `read_dta()` (Stata) và `read_sas()` (SAS) trong package `haven`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(haven)\ndf <- read_dta(file = \"data/linelist-raw.dta\")\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 28\n  case_id generation infection_date      date_onset hosp_date          \n  <chr>        <dbl> <dttm>              <chr>      <dttm>             \n1 5fe599           4 2014-05-08 00:00:00 2014-05-13 2014-05-15 00:00:00\n2 8689b7           4 NA                  2014-05-13 2014-05-14 00:00:00\n3 11f8ea           2 NA                  2014-05-16 2014-05-18 00:00:00\n4 b8812a           3 2014-05-04 00:00:00 2014-05-18 2014-05-20 00:00:00\n5 893f25           3 2014-05-18 00:00:00 2014-05-21 2014-05-22 00:00:00\n6 be99c8           3 2014-05-03 00:00:00 2014-05-22 2014-05-23 00:00:00\n# ℹ 23 more variables: date_of_outcome <dttm>, outcome <chr>, gender <chr>,\n#   hospital <chr>, lon <dbl>, lat <dbl>, infector <chr>, source <chr>,\n#   age <chr>, age_unit <chr>, row_num <dbl>, wt_kg <dbl>, ht_cm <dbl>,\n#   ct_blood <dbl>, fever <chr>, chills <chr>, cough <chr>, aches <chr>,\n#   vomit <chr>, temp <dbl>, time_admission <chr>, merged_header <chr>,\n#   x28 <chr>\n```\n:::\n:::\n\n\n## Mục tiêu\n\n1.  Biết cách tìm path tới nơi lưu file data\n2.  Biết cách tạo và quản lý R project\n3.  Biết cách đọc data vào R\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}